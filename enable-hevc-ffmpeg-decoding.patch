From d67270fd70a71770d3a91c117c847333f289bad1 Mon Sep 17 00:00:00 2001
From: Sta Zhu <zhusidayoyo@hotmail.com>
Date: Sat, 23 Nov 2024 20:11:24 +0800
Subject: [PATCH] Video: Enable HEVC ffmpeg decoding

This will consider all HEVC profile as to supported, let FFMpegVideoDecoder
handle SW fallback and help you be able to play video's like HEVC Rext, SCC
etc... as long as ffmpeg support it.
---
 media/base/supported_types.cc         | 33 ++++-----------------------
 media/ffmpeg/ffmpeg_common.cc         |  2 +-
 media/filters/ffmpeg_video_decoder.cc |  7 +++---
 3 files changed, 10 insertions(+), 32 deletions(-)

diff --git a/media/base/supported_types.cc b/media/base/supported_types.cc
index 8db4b2d5cf1f5..2a338248f6f0b 100644
--- a/media/base/supported_types.cc
+++ b/media/base/supported_types.cc
@@ -230,35 +230,12 @@ bool IsAudioCodecProprietary(AudioCodec codec) {
 #endif  // !BUILDFLAG(USE_PROPRIETARY_CODECS)
 
 bool IsDecoderHevcProfileSupported(const VideoType& type) {
-  if (!IsDecoderColorSpaceSupported(type.color_space)) {
-    return false;
-  }
-
-#if BUILDFLAG(ENABLE_PLATFORM_HEVC)
-#if BUILDFLAG(PLATFORM_HAS_OPTIONAL_HEVC_DECODE_SUPPORT)
-#if BUILDFLAG(IS_CHROMEOS_LACROS)
-  // TODO(b/171813538): For Lacros, the supplemental profile cache will be
-  // asking lacros-gpu, but we will be doing decoding in ash-gpu. Until the
-  // codec detection is plumbed through to ash-gpu we can do this extra check
-  // for HEVC support.
-  if (base::CommandLine::ForCurrentProcess()->HasSwitch(
-          switches::kLacrosEnablePlatformHevc)) {
-    return true;
-  }
-#endif  // BUILDFLAG(IS_CHROMEOS_LACROS)
-#if BUILDFLAG(IS_CHROMEOS_ASH)
-  if (!base::FeatureList::IsEnabled(kPlatformHEVCDecoderSupport)) {
-    return false;
-  }
-#endif  // BUILDFLAG(IS_CHROMEOS_ASH)
-  return GetSupplementalDecoderVideoProfileCache()->IsProfileSupported(
-      type.profile);
-#else
+#if BUILDFLAG(ENABLE_FFMPEG_VIDEO_DECODERS)
   return true;
-#endif  // BUIDFLAG(PLATFORM_HAS_OPTIONAL_HEVC_DECODE_SUPPORT)
 #else
-  return false;
-#endif  // BUILDFLAG(ENABLE_PLATFORM_HEVC)
+  return GetSupplementalDecoderVideoProfileCache()->IsProfileSupported(
+      type.profile);
+#endif  // BUILDFLAG(ENABLE_FFMPEG_VIDEO_DECODERS)
 }
 
 bool IsDecoderVp9ProfileSupported(const VideoType& type) {
@@ -580,7 +557,7 @@ bool IsDefaultEncoderSupportedVideoType(const VideoType& type) {
 
 bool IsDecoderBuiltInVideoCodec(VideoCodec codec) {
 #if BUILDFLAG(ENABLE_FFMPEG_VIDEO_DECODERS) && BUILDFLAG(USE_PROPRIETARY_CODECS)
-  if (codec == VideoCodec::kH264) {
+  if (codec == VideoCodec::kH264 || codec == VideoCodec::kHEVC) {
     return true;
   }
 #endif  // BUILDFLAG(ENABLE_FFMPEG_VIDEO_DECODERS) &&
diff --git a/media/ffmpeg/ffmpeg_common.cc b/media/ffmpeg/ffmpeg_common.cc
index d2c70a53c5743..3dae58c8611f5 100644
--- a/media/ffmpeg/ffmpeg_common.cc
+++ b/media/ffmpeg/ffmpeg_common.cc
@@ -67,7 +67,7 @@ VideoColorSpace GetGuessedColorSpace(const VideoColorSpace& color_space) {
 const char* GetAllowedVideoDecoders() {
   // This should match the configured lists in //third_party/ffmpeg.
 #if BUILDFLAG(USE_PROPRIETARY_CODECS) && BUILDFLAG(ENABLE_FFMPEG_VIDEO_DECODERS)
-  return "h264";
+  return "h264,hevc";
 #else
   return "";
 #endif
diff --git a/media/filters/ffmpeg_video_decoder.cc b/media/filters/ffmpeg_video_decoder.cc
index b3b22e2d0045f..96cc8c3640737 100644
--- a/media/filters/ffmpeg_video_decoder.cc
+++ b/media/filters/ffmpeg_video_decoder.cc
@@ -82,7 +82,6 @@ static int GetFFmpegVideoDecoderThreadCount(const VideoDecoderConfig& config) {
     case VideoCodec::kUnknown:
     case VideoCodec::kVC1:
     case VideoCodec::kMPEG2:
-    case VideoCodec::kHEVC:
     case VideoCodec::kVP9:
     case VideoCodec::kAV1:
     case VideoCodec::kDolbyVision:
@@ -93,6 +92,7 @@ static int GetFFmpegVideoDecoderThreadCount(const VideoDecoderConfig& config) {
       NOTREACHED();
 
     case VideoCodec::kH264:
+    case VideoCodec::kHEVC:
       // Normalize to three threads for 1080p content, then scale linearly
       // with number of pixels.
       // Examples:
@@ -126,8 +126,9 @@ static void ReleaseVideoBufferImpl(void* opaque, uint8_t* data) {
 
 // static
 bool FFmpegVideoDecoder::IsCodecSupported(VideoCodec codec) {
-  // We only build support for H.264.
-  return codec == VideoCodec::kH264 && IsDecoderBuiltInVideoCodec(codec);
+  // We only build support for H.264 / H.265.
+  return (codec == VideoCodec::kH264 || codec == VideoCodec::kHEVC) &&
+         IsDecoderBuiltInVideoCodec(codec);
 }
 
 FFmpegVideoDecoder::FFmpegVideoDecoder(MediaLog* media_log)
-- 
2.47.0

